{"version":3,"sources":["css/List.module.css","css/ResultItem.module.css","global-context.js","css/Card.module.css","components/ResultItem.js","components/Card.js","components/List.js","App.js","index.js"],"names":["module","exports","GlobalContext","React","createContext","closeModal","openModal","displayedCharacter","setDisplayedCharacter","ResultItem","props","statusColor","character","status","toUpperCase","context","useContext","clickHandler","useCallback","e","onClick","className","styles","src","image","alt","name","species","style","backgroundColor","statusDot","Card","forwardRef","ref","children","List","endOfResultsRef","useRef","listRef","useEffect","resultInfo","next","observer","IntersectionObserver","isIntersecting","fetchNextPage","threshold","root","current","observe","target","unobserve","characterList","length","errorMsg","map","c","id","resultEnd","details","Search","Input","Character","lazy","App","useState","results","setResults","isModalDisplayed","setIsModalDisplayed","debounceTimer","fetchQuickView","a","axios","method","url","result","data","newSearch","console","log","value","info","message","prev","clearTimeout","setTimeout","bind","Provider","fallback","onChange","placeholder","width","enterButton","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3ba938eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__26ftj\",\"errorMsg\":\"List_errorMsg__2PGth\",\"resultEnd\":\"List_resultEnd__3wrlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResultItem\":\"ResultItem_ResultItem__3kBz4\",\"statusDot\":\"ResultItem_statusDot__3K_MI\",\"species\":\"ResultItem_species__3ZjqI\",\"name\":\"ResultItem_name__yUjkh\"};","import React from \"react\";\n\nconst GlobalContext = React.createContext({\n    closeModal: () => {},\n    openModal: () => {},\n    displayedCharacter: {},\n    setDisplayedCharacter: () => {},\n});\n\nexport default GlobalContext;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2Qh-k\"};","import styles from \"../css/ResultItem.module.css\";\n\nimport React, { useState, useEffect } from \"react\";\n\nimport GlobalContext from \"../global-context\";\n\nconst ResultItem = (props) => {\n    let statusColor;\n    if (props.character.status.toUpperCase() === \"ALIVE\") statusColor = \"green\";\n    if (props.character.status.toUpperCase() === \"DEAD\") statusColor = \"red\";\n    if (props.character.status.toUpperCase() === \"UNKNOWN\")\n        statusColor = \"gray\";\n\n    const context = React.useContext(GlobalContext);\n\n    const clickHandler = React.useCallback(\n        (e) => {\n            context.openModal();\n            context.setDisplayedCharacter(props.character);\n        },\n        [props, context]\n    );\n\n    return (\n        <div onClick={clickHandler} className={styles.ResultItem}>\n            <img src={props.character.image} alt=\":(\" />\n            <div className={styles.name}>{props.character.name}</div>\n            <div className={styles.species}>\n                <span\n                    style={{ backgroundColor: statusColor }}\n                    className={styles.statusDot}\n                ></span>\n                &nbsp;\n                {props.character.status}-{props.character.species}\n            </div>\n        </div>\n    );\n};\n\nexport default ResultItem;\n","import styles from \"../css/Card.module.css\";\n\nimport React, { useState, useEffect } from \"react\";\n\nconst Card = React.forwardRef((props, ref) => {\n    return (\n        <div\n            ref={ref}\n            style={props.styles}\n            className={styles.Card + \" \" + props.className}\n        >\n            {props.children}\n        </div>\n    );\n});\n\nexport default Card;\n","import styles from \"../css/List.module.css\";\n\nimport React, { useState, useEffect } from \"react\";\n\nimport ResultItem from \"./ResultItem\";\n\nimport Card from \"./Card\";\n\nfunction List(props) {\n    const endOfResultsRef = React.useRef();\n    const listRef = React.useRef();\n\n    useEffect(() => {\n        if (!props.resultInfo.next) return;\n        function callBack([entries]) {\n            if (entries.isIntersecting) props.fetchNextPage();\n        }\n        const observer = new IntersectionObserver(callBack, {\n            threshold: 0.5,\n            root: listRef.current,\n        });\n        observer.observe(endOfResultsRef.current);\n        const target = endOfResultsRef.current;\n        return () => {\n            observer.unobserve(target);\n        };\n    }, [props]);\n\n    return (\n        <Card ref={listRef} className={styles.List}>\n            {props.characterList.length === 0 && (\n                <div className={styles.errorMsg}>No Results Found</div>\n            )}\n            {props.characterList.length !== 0 &&\n                props.characterList.map((c) => (\n                    <ResultItem key={c.id} character={c} />\n                ))}\n            {props.characterList.length !== 0 && props.resultInfo.next && (\n                <div ref={endOfResultsRef} className={styles.resultEnd}>\n                    Loading ...\n                </div>\n            )}\n            {props.resultInfo.details !== \"quickview\" &&\n                props.characterList.length !== 0 &&\n                !props.resultInfo.next && (\n                    <div className={styles.resultEnd}>End of Results</div>\n                )}\n            {props.resultInfo.details === \"quickview\" && (\n                <div className={styles.resultEnd}>QuickView</div>\n            )}\n        </Card>\n    );\n}\n\nexport default List;\n","import \"./App.css\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nimport GlobalContext from \"./global-context\";\n\nimport axios from \"axios\";\nimport React, { Suspense, useEffect } from \"react\";\nimport List from \"./components/List\";\nimport { Input } from \"antd\";\nconst { Search } = Input;\nconst Character = React.lazy(() => import(\"./components/Character\"));\n\nfunction App() {\n    const [results, setResults] = React.useState({\n        characterList: [],\n        resultInfo: {},\n    });\n    const [isModalDisplayed, setIsModalDisplayed] = React.useState(false);\n    const [displayedCharacter, setDisplayedCharacter] = React.useState({});\n    const debounceTimer = React.useRef();\n\n    async function fetchQuickView() {\n        const result = await axios({\n            method: \"GET\",\n            url: `https://rickandmortyapi.com/api/character/?name=Rick%20Sanchez`,\n        });\n        setResults({\n            characterList: result.data.results,\n            resultInfo: { details: \"quickview\" },\n        });\n    }\n\n    useEffect(() => {\n        fetchQuickView();\n    }, []);\n\n    async function newSearch(e) {\n        console.log(\"searching\", e.target.value);\n        if (e.target.value === \"\") return fetchQuickView();\n        try {\n            const result = await axios({\n                method: \"GET\",\n                url: `https://rickandmortyapi.com/api/character/?name=${e.target.value}`,\n            });\n            setResults({\n                characterList: result.data.results,\n                resultInfo: result.data.info,\n            });\n        } catch (e) {\n            console.log(e.message);\n            setResults({ characterList: [], resultInfo: {} });\n        }\n    }\n\n    async function fetchNextPage() {\n        try {\n            const result = await axios({\n                method: \"GET\",\n                url: results.resultInfo.next,\n            });\n            setResults((prev) => ({\n                characterList: [...prev.characterList, ...result.data.results],\n                resultInfo: result.data.info,\n            }));\n        } catch (e) {\n            console.log(e.message);\n            setResults({ characterList: [], resultInfo: {} });\n        }\n    }\n\n    async function debouncedSearch(e) {\n        clearTimeout(debounceTimer.current);\n        debounceTimer.current = setTimeout(newSearch.bind(null, e), 700);\n    }\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                closeModal: setIsModalDisplayed.bind(null, false),\n                openModal: setIsModalDisplayed.bind(null, true),\n                displayedCharacter,\n                setDisplayedCharacter,\n            }}\n        >\n            <div className=\"App\">\n                {isModalDisplayed && (\n                    <Suspense\n                        fallback={\n                            <div className=\"characterSuspenseText\">\n                                Loading...\n                            </div>\n                        }\n                    >\n                        <Character />\n                    </Suspense>\n                )}\n                <h1 className=\"heading\">Rick and Morty Search</h1>\n                <Search\n                    onChange={debouncedSearch}\n                    placeholder=\"Search for Rick n Morty characters\"\n                    style={{ width: 300 }}\n                    enterButton\n                />\n                <List\n                    fetchNextPage={fetchNextPage}\n                    characterList={results.characterList}\n                    resultInfo={results.resultInfo}\n                />\n            </div>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}